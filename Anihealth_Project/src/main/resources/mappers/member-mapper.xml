<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">

	<!-- 
		MEMBER 테이블의 조회결과를 
		Member VO 객체로 옮겨주는 ResultMap	
	-->
	
	<resultMap type="member" id="memberResultSet">
		<result column="USER_NO" property="userNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="USER_NAME" property="userName"/>
		<result column="USER_NICK" property="userNick"/>
		<result column="EMAIL" property="email"/>
		<result column="PHONE" property="phone"/>
		<result column="USER_BIRTHDAY" property="userBirthday"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<resultMap type="order" id="orderResultSet">
		<result column="ORDER_NO" property="orderNo"/>
		<result column="PAY_CODE" property="payCode"/>
		<result column="ORDER_PRICE" property="orderPrice"/>
		<result column="ORDER_REQUEST" property="orderRequest"/>
		<result column="ORDER_DATE" property="orderDate"/>
		<result column="ORDER_CANCLE" property="orderCancle" />
		<result column="DELIVERY_STATUS" property="deliveryStatus" />
		<result column="ORDER_PHONE" property="orderPhone" />
		<result column="ORDER_ADDRESS" property="orderAddress" />
		<result column="ORDER_ZIPCODE" property="orderZipcode" />
		<result column="USER_NO" property="userNo" />
		<result column="ORDER_CONTENT" property="orderContent" />		
	</resultMap>
		
	<resultMap type="orderProduct" id="orderProductResultSet">
		<result column="ORDER_PRODUCT_NO" property="orderProductNo"/>
		<result column="ORDER_QUANTITY" property="orderQuantity"/>
		<result column="ORDER_PRODUCT_PRICE" property="orderProductPrice"/>
		<result column="ORDER_NO" property="orderNo"/>
		<result column="PRODUCT_NO" property="productNo"/>
		<result column="PRODUCT_THUMBNAIL_PATH" property="productThumbnailPath" />
		<result column="PRODUCT_NAME" property="productName" />
		<result column="DELIVERY_STATUS" property="deliveryStatus" />
		<result column="ORDER_DATE" property="orderDate" />
		<result column="ORDER_CANCLE" property="orderCancle" />
		<result column="ORDER_CONTENT" property="orderContent" />
	</resultMap>
	
	<resultMap type="delivery" id="deliveryResultSet">
		<result column="DELIVERY_NO" property="deliveryNo" />
		<result column="DELIVERY_NAME" property="deliveryName" />
		<result column="DELIVERY_ADDRESS" property="deliveryAddress" />
		<result column="DELIVERY_ZIPCODE" property="deliveryZipcode" />
		<result column="USER_ID" property="userId" />
	</resultMap>
	
	<resultMap type="review" id="reviewResultSet">
		<result column="REVIEW_NO" property="reviewNo" />
		<result column="RATING" property="rating" />
		<result column="REVIEW_TITLE" property="reviewTitle" />
		<result column="REVIEW_CONTENT" property="reviewContent" />
		<result column="REVIEW_FILE_PATH" property="reviewFilePath" />
		<result column="REVIEW_DATE" property="reviewDate" />
		<result column="REVIEW_STATUS" property="reviewStatus" />
		<result column="ORDER_PRODUCT_NO" property="orderProductNo" />
		<result column="USER_NO" property="userNo" />
		<result column="PRODUCT_NAME" property="productName" />
	</resultMap>
	
	<resultMap type="wishlist" id="wishlistResultSet">
		<result column="PRODUCT_NO" property="productNo" />
		<result column="USER_NO" property="userNo" />
		<result column="PRODUCT_NAME" property="productName" />
		<result column="CATEGORY" property="category" />
		<result column="PRODUCT_THUMBNAIL_PATH" property="productThumbnailPath" />
		<result column="PRICE" property="price" />
	</resultMap>
	
	<resultMap type="inquiry" id="inquiryResultSet">
		<result column="INQUIRY_NO" property="inquiryNo" />
		<result column="INQUIRY_TITLE" property="inquiryTitle" />
		<result column="INQUIRY_CONTENT" property="inquiryContent" />
		<result column="INQUIRY_CREATE" property="inquiryCreate" />
		<result column="INQUIRY_ANSWER" property="inquiryAnswer" />
		<result column="INQUIRY_ANSWER_CONTENT" property="inquiryAnswerContent" />
		<result column="INQUIRY_STATUS" property="inquiryStatus" />
		<result column="USER_NO" property="userNo" />
	</resultMap>
	
	
	
	<!-- 로그인용 쿼리문 -->
	<select id="loginMember" 
			parameterType="member"
			resultMap="memberResultSet">
	<!-- 
		암호화 작업 전 : 아이디, 비번 둘다 동등비교
		SELECT *
		  FROM MEMBER
		 WHERE USER_ID = #{userId}
		   AND USER_PWD = #{userPwd}
		   AND STATUS = 'Y'
	-->
	<!-- 암호화 작업 후 : 오로지 아이디만을 가지고 조회 -->
		SELECT *
		  FROM MEMBER
		 WHERE USER_ID = #{userId}
		   AND STATUS = 'Y'
	</select>
	
	<!-- 회원가입용 쿼리문 -->
	<insert id="insertMember"
			parameterType="member">
		INSERT INTO MEMBER(USER_NO
						 , USER_ID
						 , USER_PWD
						 , USER_NAME
						 , USER_NICK
						 , EMAIL
						 , PHONE
						 , USER_BIRTHDAY)
				    VALUES(SEQ_USER_NO.NEXTVAL
				    	 , #{userId}
				    	 , #{userPwd}
				    	 , #{userName}
				    	 , #{userNick}
				    	 , #{email}
				    	 , #{phone}
				    	 , #{userBirthday})
	</insert>
	
	<!-- 회원가입 시 배송지 insert -->
	<insert id="insertAddress"
			parameterType="member">
		INSERT INTO DELIVERY(DELIVERY_NO
						   , DELIVERY_NAME
						   , DELIVERY_ADDRESS
						   , DELIVERY_ZIPCODE
						   , USER_ID)
					  VALUES(SEQ_DELIVERY_NO.NEXTVAL
					  	   , '집'
					  	   , #{addressAll}
					  	   , #{deliveryZipcode}
					  	   , #{userId})
	</insert>
	
	<!-- 아이디 중복확인용 쿼리문 -->
	<select id="idCheck"
			parameterType="string"
			resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE USER_ID = #{checkId}
	</select>
	
	<!-- 닉네임 중복확인용 쿼리문 -->
	<select id="nickCheck"
			parameterType="string"
			resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE USER_NICK = #{checkNick}
	</select>
	
	<!-- 이메일 중복확인용 쿼리문 -->
	<select id="emailCheck"
			parameterType="string"
			resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE EMAIL = #{checkEmail}
	</select>
	
	<!-- 아이디 찾기 쿼리문 -->
	<select id="findIdEmail"
			parameterType="string"
			resultType="string">
		SELECT USER_ID
		  FROM MEMBER
		 WHERE USER_NAME = #{userName}
		   AND EMAIL = #{email}
	</select>
	
	
	<!-- 비밀번호 찾기 쿼리문 -->
	<select id="findPwdEmail"
			parameterType="string"
			resultType="string">	
		SELECT USER_ID
		  FROM MEMBER
		 WHERE USER_ID = #{userId}
	   AND EMAIL = #{email}
	</select>
	
	<update id="updateFindPwd"
			parameterType="member">
		UPDATE MEMBER
		   SET USER_PWD = #{userPwd}
		 WHERE USER_ID = #{userId}
		   AND STATUS = 'Y'
	</update>
	
	<!-- 회원 수정 쿼리문 -->
	<update id="updateMember"
			parameterType="member">
		UPDATE MEMBER
		   SET USER_NAME = #{userName}
		     , PHONE = #{phone}
		     , USER_BIRTHDAY = #{userBirthday}
		 WHERE USER_ID = #{userId}
	</update>
	
	<!-- 회원탈퇴 -->
	<update id="deleteMember"
			parameterType="string">
		UPDATE MEMBER
		   SET STATUS = 'N'
		 WHERE USER_ID = #{userId}
		   AND STATUS = 'Y'
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePwd"
			parameterType="string">
		UPDATE MEMBER
		   SET USER_PWD = #{userPwd}
		 WHERE USER_ID = #{userId}
		   AND STATUS = 'Y'
	</update>
	
	<!-- 주문내역 조회 쿼리문 -->
	<select id="selectOrderList"
			resultMap="orderResultSet">
		SELECT ORDER_NO
		     , PAY_CODE
		     , ORDER_PRICE
		     , ORDER_REQUEST
		     , TO_CHAR(ORDER_DATE, 'YYYY-MM-DD HH24:MI:SS') AS ORDER_DATE
		     , ORDER_CANCLE
		     , DELIVERY_STATUS
		     , ORDER_PHONE
		     , ORDER_ADDRESS
		     , ORDER_ZIPCODE
		     , USER_NO
		     , ORDER_CONTENT
		  FROM "ORDER"
		 WHERE USER_NO = #{userNo}
		 ORDER BY ORDER_DATE DESC
		 
		   
	</select>
			 
	<!-- 주문내역 환불하기 쿼리문 -->
	<update id="orderRefund"
			parameterType="order">
		UPDATE "ORDER"
		   SET ORDER_CANCLE = 'N'
		 WHERE ORDER_NO = #{ono}
	</update>			 
	
	<!-- 상세 주문내역 조회 쿼리문 -->
	<select id="selectOrderDetailList"
			resultMap="orderProductResultSet">
		SELECT OP.ORDER_PRODUCT_NO
		     , OP.ORDER_QUANTITY
		     , OP.ORDER_PRODUCT_PRICE
		     , OP.ORDER_NO
		     , OP.PRODUCT_NO
		     , O.ORDER_CANCLE
		     , P.PRODUCT_THUMBNAIL_PATH
		     , P.PRODUCT_NAME
		     , O.DELIVERY_STATUS
		     , TO_CHAR(O.ORDER_DATE, 'YYYY-MM-DD') AS ORDER_DATE
		     , O.ORDER_CONTENT
		  FROM ORDER_PRODUCT OP
		  JOIN "ORDER" O ON (OP.ORDER_NO = O.ORDER_NO)
		  JOIN PRODUCT P ON (OP.PRODUCT_NO = P.PRODUCT_NO)
		 WHERE O.ORDER_NO = #{ono}
	</select>
	
	<!-- 배송지 조회 쿼리문 -->
	<select id="selectDeliveryList"
			resultMap="deliveryResultSet">
		SELECT DELIVERY_NO
		     , DELIVERY_NAME
		     , DELIVERY_ZIPCODE
		     , DELIVERY_ADDRESS
		     , USER_ID
		  FROM DELIVERY
		 WHERE USER_ID = #{userId}
		 ORDER BY CASE 
           WHEN DELIVERY_NAME = '집' THEN 1
           WHEN DELIVERY_NAME = '회사' THEN 2
           WHEN DELIVERY_NAME = '기타' THEN 3
           ELSE 4
         END
	</select>
	
	<!-- 배송지 수정 쿼리문 -->
	<update id="updateDelivery"
			parameterType="delivery">
		UPDATE DELIVERY
		   SET DELIVERY_ADDRESS = #{deliveryAddress}
		     , DELIVERY_ZIPCODE = #{deliveryZipcode}
		 WHERE DELIVERY_NO = #{deliveryNo}
	</update>
	
	<!-- 배송지 삭제 쿼리문 -->
	<delete id="deleteDelivery"
			parameterType="delivery">
		DELETE 
		  FROM DELIVERY
		 WHERE DELIVERY_NO = #{deliveryNo}
	</delete>
	
	<!-- 배송지 이름만 뽑는 쿼리문 -->
	<select id="DeliList"  resultType="String" parameterType="delivery">
		SELECT DELIVERY_NAME
		  FROM DELIVERY
		 WHERE USER_ID = #{userId}
	</select>
	
	<!-- 배송지 추가 쿼리문 -->
	<insert id="insertDelivery"
			parameterType="delivery">
		INSERT INTO DELIVERY(DELIVERY_NO
						   , DELIVERY_NAME
						   , DELIVERY_ADDRESS
						   , DELIVERY_ZIPCODE
						   , USER_ID)
					  VALUES(SEQ_DELIVERY_NO.NEXTVAL
					  	   , #{deliveryName}
					  	   , #{deliveryAddress}
					  	   , #{deliveryZipcode}
					  	   , #{userId})
	</insert>
	
	<!-- 리뷰조회 쿼리문 -->
	<select id="selectReviewList"
			resultMap="reviewResultSet">
		SELECT REVIEW_NO
		     , RATING
		     , REVIEW_TITLE
		     , REVIEW_CONTENT
		     , REVIEW_FILE_PATH
		     , TO_CHAR(REVIEW_DATE, 'YYYY-MM-DD HH24:MI:SS') AS REVIEW_DATE
		     , REVIEW_STATUS
		     , R.ORDER_PRODUCT_NO
		     , USER_NO
		     , P.PRODUCT_NAME
		  FROM REVIEW R
		  JOIN ORDER_PRODUCT OP ON(R.ORDER_PRODUCT_NO = OP.ORDER_PRODUCT_NO)
		  JOIN PRODUCT P ON(OP.PRODUCT_NO = P.PRODUCT_NO)
		 WHERE R.USER_NO = ${userNo} AND REVIEW_STATUS = 'Y'
		 ORDER BY REVIEW_NO DESC                            <!-- 추가 -->
	</select>
	
	<!-- 찜 조회 쿼리문 -->
	<select id="selectWishlist"
			resultMap="wishlistResultSet">
		SELECT W.PRODUCT_NO
		     , W.USER_NO
		     , P.PRODUCT_NAME
		     , P.CATEGORY
		     , P.PRODUCT_THUMBNAIL_PATH
		     , P.PRICE
		  FROM WISHLIST W
		  JOIN PRODUCT P ON (W.PRODUCT_NO = P.PRODUCT_NO)
		 WHERE USER_NO = #{userNo}
		   AND P.PRODUCT_STATUS = 'Y'
	</select>
	
	<!-- 찜 삭제 쿼리문 -->
	<delete id="wishDelete"
			parameterType="wishlist">
		DELETE 
		  FROM WISHLIST
		 WHERE PRODUCT_NO = #{productNo}
		   AND USER_NO = #{userNo}
	</delete>
	
	<!-- 문의 조회 쿼리문 -->
	<select id="selectInquiryList"
			resultMap="inquiryResultSet">
		SELECT INQUIRY_NO
			 , INQUIRY_TITLE
			 , INQUIRY_CONTENT
			 , TO_CHAR(INQUIRY_CREATE, 'YYYY-MM-DD HH24:MI:SS') AS INQUIRY_CREATE
			 , INQUIRY_ANSWER
			 , INQUIRY_ANSWER_CONTENT
			 , INQUIRY_STATUS
			 , USER_NO
		  FROM INQUIRY
		 WHERE USER_NO = #{userNo}
		   AND INQUIRY_STATUS = 'Y'
	</select>
	
	<!-- 닉네임 변경 쿼리문 -->
	<update id="nickUpdate"
			parameterType="member">
		UPDATE MEMBER
		   SET USER_NICK = #{userNick}
		 WHERE USER_ID = #{userId}
	</update>
	
	<!-- 이메일 변경 쿼리문 -->
	<update id="emailUpdate"
			parameterType="member">
		UPDATE MEMBER
		   SET email = #{email}
		 WHERE USER_ID = #{userId}
	</update>
	
	<!-- 마이페이지 조회 쿼리문 -->
	<select id="selectMyPageList"
			resultMap="memberResultSet">
		SELECT USER_ID
		     , USER_NAME
		     , USER_NICK
		     , EMAIL
		     , PHONE
		     , USER_BIRTHDAY
		  FROM MEMBER
		 WHERE USER_ID = #{userId}
	</select>
	
	<!-- 주문내역 - 환불하기 -->
	<update id="refundOrder"
			parameterType="order">
		UPDATE "ORDER"
		   SET ORDER_CONTENT = #{orderContent}
		 WHERE ORDER_NO = #{orderNo}
	</update>

	
	
	<!-- *********** 정민 : 관리자 ********* -->
	<!-- 회원 총인원수 조회용 쿼리문 -->
	<select id="selectAdMemberListCount" parameterType="string" resultType="_int">
	    SELECT COUNT(*)
	    FROM MEMBER
	    <if test="keyword != null and keyword != ''">
	        WHERE USER_ID LIKE '%' || #{keyword} || '%' OR USER_NICK LIKE '%' || #{keyword} || '%' OR USER_NAME LIKE '%' || #{keyword} || '%'
	    </if>
	</select>
	
	
	<!-- 회원 목록 조회 -->
	<select id="selectAdMemberList" parameterType="string" resultMap="memberResultSet">
		SELECT USER_NO
	         , USER_ID
	         , USER_NICK
	         , CREATE_DATE
	         , STATUS
		  FROM MEMBER
		  <if test="keyword != null and keyword != ''">
          	WHERE USER_ID LIKE '%' || #{keyword} || '%' OR USER_NICK LIKE '%' || #{keyword} || '%' OR USER_NAME LIKE '%' || #{keyword} || '%'
          </if>
		 ORDER BY USER_NO DESC
	</select>
	
	<!-- 회원 상세 조회 -->
	<select id="selectAdMember" parameterType="_int" resultMap="memberResultSet">
		SELECT USER_NO
	         , USER_ID
	         , USER_NAME
	         , USER_NICK
	         , EMAIL
	         , PHONE
	         , USER_BIRTHDAY
	         , CREATE_DATE
	         , STATUS
		  FROM MEMBER
		 WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 회원 배송지 조회 -->
	<select id="selectAdDelivery" parameterType="string" resultMap="deliveryResultSet">
		SELECT DELIVERY_NO
	         , DELIVERY_NAME 
	         , DELIVERY_ADDRESS
	         , DELIVERY_ZIPCODE
		  FROM DELIVERY
		 WHERE USER_ID = #{userId}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateAdMember" parameterType="member">
		UPDATE MEMBER
		   SET USER_NAME = #{userName}
		   	 , USER_NICK = #{userNick}
		   	 , PHONE = #{phone}
		   	 , USER_BIRTHDAY = #{userBirthday}
		   	 , STATUS = #{status}
		 WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 활동 회원 수 조회 -->
	<select id="selectAdActiveMember" resultType="_int">
		SELECT COUNT(*)
		  FROM MEMBER
		 WHERE STATUS = 'Y'
	</select>
	<!-- *********** 정민 : 관리자 ********* -->
	
</mapper>
	
	
	
	
	
	
	
	